openapi: 3.1.0
info:
  title: Virtual Screen Manager API
  description: |
    This API allows users to manage and interact with "virtual screens," which are accessible via web endpoints. 
    The API facilitates user authentication, virtual screen creation, content management, and chatbot integration, enabling multi-device access to virtual screens.
  version: 1.0.0

servers:
  - url: https://9848-72-76-95-132.ngrok-free.app
    description: Ngrok public URL

paths:
  /auth/register:
    post:
      operationId: registerUser
      summary: Register a new user
      description: |
        Register a new user by providing a username and password. This endpoint is used to create a new account for managing virtual screens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input (e.g., missing required fields)
        '409':
          description: Username already exists

  /auth/login:
    post:
      operationId: loginUser
      summary: Authenticate a user and get a token
      description: |
        Login using a username and password to receive an authentication token. This token is required for subsequent API requests.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Invalid credentials

  /auth/logout:
    post:
      operationId: logoutUser
      summary: Logout a user
      description: |
        Logs out the authenticated user and invalidates their session token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenOnly'
      responses:
        '200':
          description: Logout successful

  /screens:
    post:
      operationId: getScreens
      summary: Get all screens for the authenticated user
      description: |
        Fetch a list of all virtual screens created by the authenticated user. The user must provide a valid authentication token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenOnly'
      responses:
        '200':
          description: List of screens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screen'

  /screens/create:
    post:
      operationId: createScreen
      summary: Create a new screen
      description: |
        Create a new virtual screen by providing a name and optional content. Each screen is assigned a unique URL accessible via browsers and API requests.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewScreen'
      responses:
        '201':
          description: Screen created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'

  /screens/get:
    post:
      operationId: getScreen
      summary: Get a specific screen
      description: |
        Fetch details of a specific virtual screen by providing its screen ID. The response includes the screen's name, URL, and content.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenRequest'
      responses:
        '200':
          description: Screen details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'
        '404':
          description: Screen not found

  /screens/update:
    post:
      operationId: updateScreen
      summary: Update a screen
      description: |
        Update the name or content of an existing virtual screen. The user must provide the screen ID and updated details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreen'
      responses:
        '200':
          description: Screen updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'
        '404':
          description: Screen not found

  /screens/delete:
    post:
      operationId: deleteScreen
      summary: Delete a screen
      description: |
        Delete an existing virtual screen by providing its screen ID. Once deleted, the screen and its content will no longer be accessible.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenRequest'
      responses:
        '200':
          description: Screen deleted successfully
        '404':
          description: Screen not found

  /screens/content/get:
    post:
      operationId: getScreenContent
      summary: Get screen content
      description: |
        Fetch the content of a specific virtual screen by providing its screen ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenRequest'
      responses:
        '200':
          description: Screen content retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenContent'
        '404':
          description: Screen not found

  /screens/content/update:
    post:
      operationId: updateScreenContent
      summary: Update screen content
      description: |
        Update the content of a specific virtual screen by providing its screen ID and the new content.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenContent'
      responses:
        '200':
          description: Screen content updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'
        '404':
          description: Screen not found

  /screens/clear:
    post:
      operationId: clearAllScreens
      summary: Clear all screens for the authenticated user
      description: |
        Deletes all virtual screens created by the authenticated user. 
        This action removes all screens and their associated content.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenOnly'
      responses:
        '200':
          description: All screens deleted successfully
        '404':
          description: No screens found for the user

components:
  schemas:
    UserCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    Token:
      type: object
      properties:
        access_token:
          type: string

    TokenOnly:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    Screen:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        content:
          type: string
        width:
          type: integer
          default: 800
        height:
          type: integer
          default: 500

    NewScreen:
      type: object
      required:
        - token
        - name
      properties:
        token:
          type: string
        name:
          type: string
        content:
          type: string

    ScreenRequest:
      type: object
      required:
        - token
        - screen_id
      properties:
        token:
          type: string
        screen_id:
          type: integer

    UpdateScreen:
      type: object
      required:
        - token
        - screen_id
      properties:
        token:
          type: string
        screen_id:
          type: integer
        name:
          type: string
        content:
          type: string

    ScreenContent:
      type: object
      required:
        - content
      properties:
        content:
          type: string

    UpdateScreenContent:
      type: object
      required:
        - token
        - screen_id
        - content
      properties:
        token:
          type: string
        screen_id:
          type: integer
        content:
          type: string
